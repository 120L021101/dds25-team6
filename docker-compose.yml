version: "3"

networks:
  my_network:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.1.0/24

services:

  gateway:
    image: nginx:1.25-bookworm
    volumes:
      - ./gateway_nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "8000:80"
    depends_on:
      - order-service
      - stock-service
      - payment-service
    networks:
      my_network:
        ipv4_address: 192.168.1.10

  order-service:
    build: ./order
    image: order:latest
    environment:
      - GATEWAY_URL=http://gateway:80
      - PYTHONUNBUFFERED=1
      - GEVENT_SUPPORT=True  # 添加这个环境变量支持gevent调试
    # command: sh -c "pip install debugpy && python -m debugpy --listen 0.0.0.0:5678 --wait-for-client -m gunicorn -b 0.0.0.0:5000 -w 1 -k gevent --worker-connections 1000 --timeout 300 app:app"
    command: gunicorn -b 0.0.0.0:5000 -w 4 -k gevent --worker-connections 1000 --timeout 15 --log-level=info app:app
    ports:
      - "5000:5000"  # 应用端口
      - "5678:5678"  # 调试端口
    env_file:
      - env/order_redis.env
    depends_on:
      - order-db-sentinel
    networks:
      my_network:
        ipv4_address: 192.168.1.20

  order-db-master:
    image: redis:7.2-bookworm
    hostname: order-db-master
    container_name: order-db-master
    volumes:
      - ./data/order-db/master:/data
    ports:
      - "16379:6379"
    command:
      [
        "redis-server",
        "--appendonly", "yes",
        "--requirepass", "redis",
        "--masterauth", "redis",
        "--maxmemory", "512mb",
        "--repl-diskless-load", "on-empty-db",
        "--replica-announce-port", "6379",
        "--protected-mode", "no"
      ]
    networks:
      my_network:
        ipv4_address: 192.168.1.30

  order-db-slave:
    image: redis:7.2-bookworm
    container_name: order-db-slave
    hostname: order-db-slave
    depends_on:
      - order-db-master
    ports:
      - "6380:6379"
    volumes:
      - ./data/order-db/slave1:/data
    command:
      [
        "redis-server",
        "--appendonly", "yes",
        "--masterauth", "redis",
        "--requirepass", "redis",
        "--maxmemory", "512mb",
        "--replicaof", "192.168.1.30", "6379",
        "--repl-diskless-load", "on-empty-db",
        "--replica-announce-port", "6379",
        "--protected-mode", "no"
      ]
    networks:
      my_network:
        ipv4_address: 192.168.1.40
  
  order-db-sentinel:
    image: redis:7.2-bookworm
    container_name: order-db-sentinel
    hostname: order-db-sentinel
    depends_on:
      - order-db-master
      - order-db-slave
    ports:
      - "26379:26379"
    command: >
      sh -c 'echo "bind 0.0.0.0" > /etc/sentinel.conf &&
            echo "sentinel monitor order-master 192.168.1.30 6379 1" >> /etc/sentinel.conf &&
            echo "sentinel auth-pass order-master redis" >> /etc/sentinel.conf &&
            echo "sentinel down-after-milliseconds order-master 5000" >> /etc/sentinel.conf &&
            echo "sentinel failover-timeout order-master 5000" >> /etc/sentinel.conf &&
            echo "sentinel parallel-syncs order-master 1" >> /etc/sentinel.conf &&
            echo "sentinel resolve-hostnames no" >> /etc/sentinel.conf &&
            echo "sentinel announce-hostnames no" >> /etc/sentinel.conf &&
            redis-sentinel /etc/sentinel.conf'
    networks:
      my_network:
        ipv4_address: 192.168.1.50

  stock-service:
    build: ./stock
    image: stock:latest
    command: gunicorn -b 0.0.0.0:5000 -w 4 -k gevent --worker-connections 1000 --timeout 15 --log-level=info app:app
    # command: sh -c "pip install debugpy && python -m debugpy --listen 0.0.0.0:5678 --wait-for-client -m gunicorn -b 0.0.0.0:5000 -w 1 -k gevent --worker-connections 1000 --timeout 300 app:app"
    ports:
      - "5100:5000"
    env_file:
      - env/stock_redis.env
    depends_on:
      - stock-db-sentinel
    networks:
      my_network:
        ipv4_address: 192.168.1.60

  stock-db-master:
    image: redis:7.2-bookworm
    hostname: stock-db-master
    container_name: stock-db-master
    ports:
      - "6381:6379"
    volumes:
      - ./data/stock-db/master:/data
    command:
      [
        "redis-server",
        "--appendonly", "yes",
        "--requirepass", "redis",
        "--maxmemory", "512mb",
        "--repl-diskless-load", "on-empty-db",
        "--replica-announce-port", "6380",
        "--protected-mode", "no"
      ]
    networks:
      my_network:
        ipv4_address: 192.168.1.70

  stock-db-slave:
    image: redis:7.2-bookworm
    container_name: stock-db-slave
    hostname: stock-db-slave
    depends_on:
      - stock-db-master
    volumes:
      - ./data/stock-db/slave1:/data
    command:
      [
        "redis-server",
        "--appendonly", "yes",
        "--masterauth", "redis",
        "--requirepass", "redis",
        "--maxmemory", "512mb",
        "--replicaof", "192.168.1.70", "6379",
        "--repl-diskless-load", "on-empty-db",
        "--replica-announce-port", "6381",
        "--protected-mode", "no"
      ]
    networks:
      my_network:
        ipv4_address: 192.168.1.80

  stock-db-sentinel:
    image: redis:7.2-bookworm
    container_name: stock-db-sentinel
    hostname: stock-db-sentinel
    depends_on:
      - stock-db-master
      - stock-db-slave
    ports:
      - "26380:26379"
    command: >
      sh -c 'echo "bind 0.0.0.0" > /etc/sentinel.conf &&
            echo "sentinel monitor stock-master 192.168.1.70 6379 1" >> /etc/sentinel.conf &&
            echo "sentinel auth-pass stock-master redis" >> /etc/sentinel.conf &&
            echo "sentinel resolve-hostnames no" >> /etc/sentinel.conf &&
            echo "sentinel down-after-milliseconds stock-master 5000" >> /etc/sentinel.conf &&
            echo "sentinel failover-timeout stock-master 5000" >> /etc/sentinel.conf &&
            echo "sentinel parallel-syncs stock-master 1" >> /etc/sentinel.conf &&
            redis-sentinel /etc/sentinel.conf'
    networks:
      my_network:
        ipv4_address: 192.168.1.90

  payment-service:
    build: ./payment
    image: payment:latest
    command: gunicorn -b 0.0.0.0:5000 -w 4 -k gevent --worker-connections 1000 --timeout 15 --log-level=info app:app
    # command: sh -c "pip install debugpy && python -m debugpy --listen 0.0.0.0:5678 --wait-for-client -m gunicorn -b 0.0.0.0:5000 -w 1 -k gevent --worker-connections 1000 --timeout 300 app:app"
    env_file:
      - env/payment_redis.env
    ports:
      - "5679:5678"
    environment:
      - PYTHONUNBUFFERED=1
      - GEVENT_SUPPORT=True  # 添加这个环境变量支持gevent调试
    depends_on:
      - payment-db-sentinel
    networks:
      my_network:
        ipv4_address: 192.168.1.100

  payment-db-master:
    image: redis:7.2-bookworm
    hostname: payment-db-master
    container_name: payment-db-master
    volumes:
      - ./data/payment-db/master:/data
    ports:
      - "6382:6379"
    command:
      [
        "redis-server",
        "--appendonly", "yes",
        "--requirepass", "redis",
        "--maxmemory", "512mb",
        "--repl-diskless-load", "on-empty-db",
        "--replica-announce-port", "6381",
        "--protected-mode", "no"
      ]
    networks:
      my_network:
        ipv4_address: 192.168.1.110

  payment-db-slave:
    image: redis:7.2-bookworm
    container_name: payment-db-slave
    hostname: payment-db-slave
    depends_on:
      - payment-db-master
    volumes:
      - ./data/payment-db/slave1:/data
    command:
      [
        "redis-server",
        "--appendonly", "yes",
        "--masterauth", "redis",
        "--requirepass", "redis",
        "--maxmemory", "512mb",
        "--replicaof", "192.168.1.110", "6379",
        "--repl-diskless-load", "on-empty-db",
        "--replica-announce-port", "6382",
        "--protected-mode", "no"
      ]
    networks:
      my_network:
        ipv4_address: 192.168.1.120

  payment-db-sentinel:
    image: redis:7.2-bookworm
    container_name: payment-db-sentinel
    hostname: payment-db-sentinel
    depends_on:
      - payment-db-master
      - payment-db-slave
    ports:
      - "26381:26379"
    command: >
      sh -c 'echo "bind 0.0.0.0" > /etc/sentinel.conf &&
            echo "sentinel monitor payment-master 192.168.1.110 6379 1" >> /etc/sentinel.conf &&
            echo "sentinel auth-pass payment-master redis" >> /etc/sentinel.conf &&
            echo "sentinel resolve-hostnames no" >> /etc/sentinel.conf &&
            echo "sentinel down-after-milliseconds payment-master 5000" >> /etc/sentinel.conf &&
            echo "sentinel failover-timeout payment-master 5000" >> /etc/sentinel.conf &&
            echo "sentinel parallel-syncs payment-master 1" >> /etc/sentinel.conf &&
            redis-sentinel /etc/sentinel.conf'
    networks:
      my_network:
        ipv4_address: 192.168.1.130
